name: Windows 构建
on:
  workflow_dispatch:
jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: 检出代码
      uses: actions/checkout@v3
    - name: 安装 dotnet
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'
    - name: 查找 msbuild.exe 路径
      run: |
        # 获取所有已安装的 SDK 信息
        $sdkInfo = & dotnet --list-sdks
        Write-Host "dotnet --list-sdks 输出: $sdkInfo"
        if ($sdkInfo) {
            # 提取第一个 SDK 的安装路径
            $firstSdkLine = $sdkInfo.Split("`n")[0].Trim()
            Write-Host "提取的第一行: $firstSdkLine"
            if ($firstSdkLine) {
                $parts = $firstSdkLine.Split(' ')
                Write-Host "分割后的部分: $($parts -join ', ')"
                if ($parts.Length -gt 0) {
                    $dotnetPath = $parts[0].Trim()
                    Write-Host "初始 dotnetPath: $dotnetPath"
                    # 确保路径是一个有效的目录路径
                    if (Test-Path -Path $dotnetPath -PathType Container) {
                        $msbuildPath = Join-Path -Path $dotnetPath -ChildPath'msbuild.exe'
                        Write-Host "有效的 msbuildPath: $msbuildPath"
                    } else {
                        # 如果路径无效，尝试从路径中提取目录部分
                        $lastIndex = $dotnetPath.LastIndexOf('\\')
                        if ($lastIndex -gt -1) {
                            $dotnetPath = $dotnetPath.Substring(0, $lastIndex)
                            if (Test-Path -Path $dotnetPath -PathType Container) {
                                $msbuildPath = Join-Path -Path $dotnetPath -ChildPath'msbuild.exe'
                                Write-Host "修正后的 msbuildPath: $msbuildPath"
                            } else {
                                Write-Host "无法找到有效的 dotnet 安装目录。"
                            }
                        } else {
                            Write-Host "无法从路径中提取有效的目录。"
                        }
                    }
                    Write-Host "##vso[task.setvariable variable=MSBUILD_PATH]$msbuildPath"
                } else {
                    Write-Host "提取的行中没有足够的部分。"
                }
            } # 这里添加一个 } 来闭合 if ($firstSdkLine) 语句块
        } else {
            Write-Host "dotnet --list-sdks 没有输出。"
        }
      shell: powershell
    - name: 安装 Visual Studio 构建工具
      run: |
        choco install visualstudio2022buildtools --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools --includeRecommended --passive" -y
      shell: powershell
    - name: 创建构建文件夹
      run: |
        cd build
      shell: powershell
    - name: 安装 CMake
      uses: jwlawson/actions-setup-cmake@v2.0.2
      with:
        cmake-version: 3.28
    - name: 配置 CMake
      run: cmake "D:\a\SnowClient\SnowClient" -G "Visual Studio 17 2022"
      shell: powershell
    - name: 使用 dotnet build 构建 DLL
      run: dotnet build "D:\a\SnowClient\SnowClient\Solstice.sln" -c Release
      working-directory: build
